# Workflow configuration for continuous integration

name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  # Lint and run unit tests
  test-unit:
    name: Unit tests
    runs-on: ubuntu-latest
        
    defaults:
      run:
        working-directory: ./app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}
      
      - name: Install dependencies
        run: yarn install

      - name: Lint files
        run: yarn lint

      - name: Run unit tests
        run: yarn test:unit --coverage
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
  # Run E2E tests
  test-e2e:
    name: E2E tests
    runs-on: macOS-latest
    timeout-minutes: 15

    defaults:
      run:
        working-directory: ./app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install

      - name: Install Java JDK
        uses: joschi/setup-jdk@v1
        with:
          java-version: 'openjdk8'
          architecture: 'x64'
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Download Android Emulator Image
        run: |
          echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install "system-images;android-29;google_apis;x86"
          echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd --force --name emu --device "Nexus 5X" -k 'system-images;android-29;google_apis;x86'
          $ANDROID_HOME/emulator/emulator -list-avds

      - name: Run Detox Build
        run: yarn e2e:build-android-debug

      - name: Android Emulator
        timeout-minutes: 10
        continue-on-error: true
        run: |
          echo "Starting emulator"
          nohup $ANDROID_HOME/emulator/emulator -avd emu -no-audio -no-snapshot -no-window &
          $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"

      - name: Android Detox
        env:
          RN_SRC_EXT: 'e2e.ts,e2e.js'
        run: yarn start & yarn e2e:test-android-debug

      - name: Store Detox artifacts on test failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: detox-artifacts
          path: artifacts # Default path for Detox artifacts
      

